name: Auto approve and merge PRs in Queries Folder

# Trigger the workflow on pull request
on:
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:    
      - 'main'
    paths:
      - 'queries/**.sql'

jobs:

  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      apps: ${{ steps.filter.outputs.apps }}
      scripts: ${{ steps.filter.outputs.scripts }}
      github: ${{ steps.filter.outputs.github }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          apps:
            - 'apps/**'
          scripts:
            - 'scripts/**'
          github:
            - '.github/**'
            
  autoapprove:
    needs: changes
    if: ${{ needs.changes.outputs.apps == 'false' && needs.changes.outputs.scripts == 'false' && needs.changes.outputs.github == 'false'}}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: hmarr/auto-approve-action@v3


#   add_labels:
#     name: Adding automerge label
#     needs: autoapprove
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions-ecosystem/action-add-labels@v1
#         with:
#           labels: |
#             automerge
#           repo-token: ${{ secrets.GITHUB_TOKEN }}

                
          
#   automerge:
#     name: AutoMerge only in Queries folder
#     # By default, jobs run in parallel. To run the jobs sequentially, they keywords "needs" is needed.
#     # Auto merge action can be done only when the PR is approved, hence this automerge needs autoapprove as a prerequisite
#     needs: add_labels
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: everlytic/branch-merge@1.1.2
#         with:
#           github_token: ${{ secrets.AUTOMERGE_ACTIONS_SECRET }}
#           source_ref: ${{ github.ref }}
#           target_branch: 'main'
#           commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'
